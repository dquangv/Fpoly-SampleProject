/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View;

import Controller.CourseDAO;
import Controller.StatisticsDAO;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JDialog;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Quang
 */
public class Chart extends javax.swing.JDialog {

    StatisticsDAO dao = new StatisticsDAO();
    CourseDAO khdao = new CourseDAO();

    /**
     * Creates new form Chart
     */
    public Chart(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        List<Model.Course> list = khdao.select();

        showPieChartBangDiem(list.get(0));
        setLocationRelativeTo(null);
    }

    public void showPieChartBangDiem(Model.Course kh) {
        try {
            panelBarChart.setLayout(new BorderLayout());
            panelBarChart.setBackground(Color.white);
            panelBarChart.setPreferredSize(new Dimension(200, 500));

            DefaultPieDataset barDataset = new DefaultPieDataset();
            List<Object[]> list = dao.getBangDiem(kh.getMaKH());

            double chuaNhap = 0, kem = 0, yeu = 0, trungBinh = 0, kha = 0, gioi = 0, xuatSac = 0;

            for (Object[] row : list) {
                if (row[3].equals("Chưa nhập")) {
                    chuaNhap++;
                } else if (row[3].equals("Kém")) {
                    kem++;
                } else if (row[3].equals("Yếu")) {
                    yeu++;
                } else if (row[3].equals("Trung bình")) {
                    trungBinh++;
                } else if (row[3].equals("Khá")) {
                    kha++;
                } else if (row[3].equals("Giỏi")) {
                    gioi++;
                } else if (row[3].equals("Xuất sắc")) {
                    xuatSac++;
                }
            }

            barDataset.setValue("Chưa nhập", chuaNhap);
            barDataset.setValue("Kém", kem);
            barDataset.setValue("Yếu", yeu);
            barDataset.setValue("Trung bình", trungBinh);
            barDataset.setValue("Khá", kha);
            barDataset.setValue("Giỏi", gioi);
            barDataset.setValue("Xuất sắc", xuatSac);

            JFreeChart pieChart = ChartFactory.createPieChart("Thống kê xếp loại người học", barDataset, false, true, false);

            PiePlot piePlot = (PiePlot) pieChart.getPlot();

            piePlot.setSectionPaint("Chưa nhập", Color.red);
            piePlot.setSectionPaint("Kém", Color.blue);
            piePlot.setSectionPaint("Yếu", Color.GREEN);
            piePlot.setSectionPaint("Trung bình", Color.YELLOW);
            piePlot.setSectionPaint("Khá", Color.PINK);
            piePlot.setSectionPaint("Giỏi", Color.ORANGE);

            piePlot.setBackgroundPaint(Color.WHITE);

            ChartPanel barChartPanel = new ChartPanel(pieChart);
            barChartPanel.setPreferredSize(new Dimension(200, 500));

            panelBarChart.removeAll();
            panelBarChart.add(barChartPanel, BorderLayout.CENTER);
            panelBarChart.validate();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        standardBarPainter1 = new org.jfree.chart.renderer.category.StandardBarPainter();
        standardBarPainter2 = new org.jfree.chart.renderer.category.StandardBarPainter();
        panelBarChart = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout panelBarChartLayout = new javax.swing.GroupLayout(panelBarChart);
        panelBarChart.setLayout(panelBarChartLayout);
        panelBarChartLayout.setHorizontalGroup(
            panelBarChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        panelBarChartLayout.setVerticalGroup(
            panelBarChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBarChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBarChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Chart dialog = new Chart(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelBarChart;
    private org.jfree.chart.renderer.category.StandardBarPainter standardBarPainter1;
    private org.jfree.chart.renderer.category.StandardBarPainter standardBarPainter2;
    // End of variables declaration//GEN-END:variables
}
